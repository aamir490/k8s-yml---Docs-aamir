#  ***************************  DaemonSet ***************************#

'''
POD :- pod is ephimeral ( lasting very short time ) & wont be rescheduled to a new node once it dies.
'''
      # POD should be created & managed by some controllers.

        # Replication Controller
        # Replica Set
        # Daemon Set
        # Deploymnet
        # Stateful set


# DaemonSet :- 'DaemonSet' is like Global service.  

#   Will make sure every node in your cluster will have a pod & we can't sacle up scale down.           
#   It will have a copy(one) of pod in each & every node of the cluster.
#   With the help of 'DaemonSet' we can deploy application like  Agent Software like, monitoring agent & log agent on each and every node.


# vi daemonset-deploymnt.yml

#---------------------------------------------------------------------------------------------------------
---
apiVersion: apps/v1
kind: DaemonSet   # --- in "DaemonSet",  will not mentain REPLICAs.
metadata:
  name: nginx-ds
  #namespace: testns 
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.7.1
          ports:
            - containerPort: 80
... 

# we create ' Service ' too  for outside & inside  communications. { OPTIONAL } 
---
kind: Service    #------ Defines to create Service type Object
apiVersion: v1
metadata:
  name: nginx-svs  # ----- service name
  #namespace: testns # -- if your namespace already exsist  & uwant to create pod in ''testn''
spec:
  type: ClusterIP    #--- Specifies the service type i.e ClusterIP{inside}  OR  NodePort{outside}
  selector:
    app: nginx  #---- Apply this service to any pods which has the specific label.
  ports:
    - port: 80        # Containers port exposed
      targetPort: 8080     # Pods port   
...

#---------------------------------------------------------------------------------------------------------

# kubectl apply -f daemonset-deploymnt.yml

# kubectl get all -o wide    ( DaewmonSet will create POd in every node in the cluster )
#          ( No ReplicaSet comes,whrn u working with 'DaemonSet'.bcz DS will itself monitor all the pod)


# kubectl describe ds kube-proxy -n kube-system 
# kubectl get ds kube-proxy -n kube-system -o yaml 

#  Use case pf DaemonSet :---

#  kubectl get pods -n kube-system -o wide  
#  kubectl get all -n kube-system -o wide  

#  ( kube-proxy-6f5g ,, weave-net-5fgd4 ) thses pods running all the node. in our cluster.



#--------------------------------------------------------------------------------------------------------------





#--------------------------------------------------------------------------------------------------------------
--- # DaemonSet
# We are tolerating master node 

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx-ds
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: myapp1  # same
  template:
    metadata:
      labels:
        app: myapp1 # same
    spec: # For POD specifications
      # we are tolerate master (Now DaemonSet pod also scheduled on Master Node)
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists # BCZ no Value here,
        effect: NoSchedule
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 8080


# kubectl describe node <Master node>

   # Taints: node-role.kubernetes.io/master:NoSchedule

   # THREEE EFFECT :
   #    NoSchedule
   #    PreferNoSchedule
   #    NoExecute
   #
   #   <Key>=<Value>:<Effect>
   #   node-role.kubernetes.io/master:NoSchedule
   #   -------- k e y ---------------:--effect--



# kubectl get pods -o wide -n test-ns   
# kubectl get ds -o wide -A
# kubectl delete ds nginx-ds -n test-ns
#--------------------------------------------------------------------------------------------------------------